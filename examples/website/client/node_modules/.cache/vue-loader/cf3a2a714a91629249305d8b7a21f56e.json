{"remainingRequest":"/home/vishwas/work/pki-auth/examples/website/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vishwas/work/pki-auth/examples/website/client/src/components/Asymmetric.vue?vue&type=style&index=0&id=53034f26&scoped=true&lang=css&","dependencies":[{"path":"/home/vishwas/work/pki-auth/examples/website/client/src/components/Asymmetric.vue","mtime":1597338519772},{"path":"/home/vishwas/work/pki-auth/examples/website/client/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/examples/website/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/examples/website/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/examples/website/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/examples/website/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.floatLeft {\n  float: left;\n}\n.fullWidth {\n  width: 100%;\n}\n.fullbody {\n  width: 500px;\n}\n",{"version":3,"sources":["Asymmetric.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Asymmetric.vue","sourceRoot":"src/components","sourcesContent":["<style scoped>\n.floatLeft {\n  float: left;\n}\n.fullWidth {\n  width: 100%;\n}\n.fullbody {\n  width: 500px;\n}\n</style>\n<template>\n  <div class=\"asymmetric\">\n    <div class=\"col-md-12\">\n      <div>\n        <b-card no-body>\n          <b-tabs card vertical nav-wrapper-class=\"w-30\">\n            <b-tab title=\"Key Pair\" active>\n              <b-card-text>\n                <div class=\"row\">\n                  <form action=\"#\" class=\"col-md-12\">\n                    <div class=\"form-group floatLeft\">\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-primary\"\n                        @click=\"generatekp()\"\n                      >Generate Keypair</button>\n                    </div>\n                  </form>\n                </div>\n                <div class=\"row\">\n                  <form action=\"#\" class=\"col-md-12\">\n                    <div class=\"form-group\">\n                      <table class=\"table table-bordered\">\n                        <tr>\n                          <th>Public Key</th>\n                          <td>\n                            <input type=\"text\" style=\"width:100%\" v-model=\"publickey\" disabled />\n                          </td>\n                        </tr>\n                        <tr>\n                          <th>Private Key</th>\n                          <td>\n                            <input type=\"text\" style=\"width:100%\" v-model=\"privatekey\" disabled />\n                          </td>\n                        </tr>\n                      </table>\n                    </div>\n                  </form>\n                </div>\n              </b-card-text>\n            </b-tab>\n            <b-tab title=\"Encryption\">\n              <b-card-text>\n                <div class=\"row\">\n                  <form action=\"#\" class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label class=\"floatLeft\">Plain Text:</label>\n                      <textarea class=\"form-control\" v-model=\"plaintext\" rows=\"8\" cols=\"50\"></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"floatLeft\">Recipient's Public Key:</label>\n                      <input type=\"text\" v-model=\"recipientPublicKey\" class=\"form-control\" />\n                    </div>\n                    <div class=\"form-group floatLeft\">\n                      <button\n                        type=\"button\"\n                        data-toggle=\"modal\"\n                        @click=\"operation('encrypt')\"\n                        class=\"btn btn-primary\"\n                      >Encrypt</button>\n                    </div>\n                  </form>\n                  <form action=\"#\" class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label class=\"floatLeft\">Cipher Text:</label>\n                      <textarea class=\"form-control\" v-model=\"cipherText\" rows=\"8\" cols=\"50\"></textarea>\n                    </div>\n                  </form>\n                </div>\n              </b-card-text>\n            </b-tab>\n            <b-tab title=\"Decryption\">\n              <b-card-text>\n                <div class=\"row\">\n                  <form action=\"#\" class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label class=\"floatLeft\">Cipher Text:</label>\n                      <textarea class=\"form-control\" v-model=\"cipherText\" rows=\"8\" cols=\"50\"></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"floatLeft\">Recipient's Private Key:</label>\n                      <input type=\"text\" v-model=\"recipientSecretKey\" class=\"form-control\" />\n                    </div>\n                    <div class=\"form-group floatLeft\">\n                      <button\n                        type=\"button\"\n                        data-toggle=\"modal\"\n                        @click=\"operation('decrypt')\"\n                        class=\"btn btn-primary\"\n                      >Decrypt</button>\n                    </div>\n                  </form>\n                  <form action=\"#\" class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label class=\"floatLeft\">Plain Text:</label>\n                      <textarea class=\"form-control\" v-model=\"decryptPlaintext\" rows=\"8\" cols=\"50\"></textarea>\n                    </div>\n                  </form>\n                </div>\n              </b-card-text>\n            </b-tab>\n            <b-tab title=\"Sign\">\n              <b-card-text>\n                <div class=\"row\">\n                  <form action=\"#\" class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label class=\"floatLeft\">Plain Text:</label>\n                      <textarea class=\"form-control\" v-model=\"plaintext\" rows=\"8\" cols=\"50\"></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                      <label class=\"floatLeft\">Sender's Private Key:</label>\n                      <input type=\"text\" v-model=\"senderPrivateKey\" class=\"form-control\" />\n                    </div>\n                    <div class=\"form-group floatLeft\">\n                      <button\n                        type=\"button\"\n                        data-toggle=\"modal\"\n                        @click=\"dsOperation('sign')\"\n                        class=\"btn btn-primary\"\n                      >Sign</button>\n                    </div>\n                  </form>\n                  <form action=\"#\" class=\"col-md-6\">\n                    <div class=\"form-group\">\n                      <label class=\"floatLeft\">Signed Message:</label>\n                      <textarea class=\"form-control\" v-model=\"signedMessage\" rows=\"8\" cols=\"50\"></textarea>\n                    </div>\n                  </form>\n                </div>\n              </b-card-text>\n            </b-tab>\n            <b-tab title=\"Verify\">\n              <b-card-text>\n                <div class=\"row\">\n                  <form action=\"#\" class=\"col-md-12\">\n                    <div class=\"row\">\n                      <div class=\"form-group col-md-6\">\n                        <label class=\"floatLeft\">Signed Message:</label>\n                        <textarea class=\"form-control\" v-model=\"signedMessage\" rows=\"8\" cols=\"50\"></textarea>\n                      </div>\n                      <div class=\"form-group col-md-6\">\n                        <label class=\"floatLeft\">Plain Text:</label>\n                        <textarea class=\"form-control\" v-model=\"plaintext\" rows=\"8\" cols=\"50\"></textarea>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"form-group col-md-6\">\n                        <label class=\"floatLeft\">Sender's Public Key:</label>\n                        <input type=\"text\" v-model=\"senderPublicKey\" class=\"form-control\" />\n                      </div>\n                      <div class=\"form-group col-md-6\">\n                        <button\n                          type=\"button\"\n                          data-toggle=\"modal\"\n                          @click=\"dsOperation('verify')\"\n                          class=\"btn btn-primary floatLeft\"\n                        >Verify</button>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n              </b-card-text>\n            </b-tab>\n          </b-tabs>\n        </b-card>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nconst asymmetric = require(\"../crypto-lib/asymmetric\");\nexport default {\n  name: \"AssymetricPage\",\n  components: {},\n  data() {\n    return {\n      publickey: \"\",\n      privatekey: \"\",\n      plaintext: \"This is your secret message!\",\n      recipientPublicKey: \"\",\n      recipientSecretKey: \"\",\n      cipherText: \"\",\n      decryptPlaintext: \"\",\n      senderPrivateKey: \"\",\n      signedMessage: \"\",\n      senderPublicKey: \"\"\n    };\n  },\n  created() {},\n  methods: {\n    generatekp: function() {\n      const keys = asymmetric.generateKeyPair();\n      this.publickey = keys.publicKey;\n      this.privatekey = keys.secretKey;\n    },\n    operation: function(op) {\n      try {\n        let res = \"\";\n        switch (op) {\n          case \"encrypt\":\n            if (this.recipientPublicKey != \"\" && this.plaintext != \"\") {\n              res = asymmetric.encrypt(this.plaintext, this.recipientPublicKey);\n              this.cipherText = JSON.stringify(res);\n            } else {\n              alert(\"Error: Plaintext or recipeint's public key is empty\");\n            }\n            break;\n          case \"decrypt\":\n            if (this.cipherText != {}) {\n              res = asymmetric.decrypt(\n                this.recipientSecretKey,\n                JSON.parse(this.cipherText)\n              );\n              this.decryptPlaintext = JSON.stringify(res);\n            } else {\n              alert(\"Error: Ciphertext is empty\");\n            }\n            break;\n          default:\n        }\n      } catch (e) {\n        alert(`Error : ${e.message}`);\n      }\n    },\n    dsOperation: function(op) {\n      try {\n        let res = \"\";\n        switch (op) {\n          case \"sign\":\n            if (this.senderPrivateKey != \"\" && this.plaintext != \"\") {\n              res = asymmetric.sign(this.plaintext, this.senderPrivateKey);\n              this.signedMessage = res;\n            } else {\n              alert(\"Error: Plaintext or recipeint's public key is empty\");\n            }\n            break;\n          case \"verify\":\n            if (\n              this.signedMessage != \"\" &&\n              this.plaintext != \"\" &&\n              this.senderPublicKey != \"\"\n            ) {\n              res = asymmetric.verify(\n                this.plaintext,\n                this.signedMessage,\n                this.senderPublicKey\n              );\n              alert(res);\n            } else {\n              alert(\"Error: Ciphertext is empty\");\n            }\n            break;\n          default:\n        }\n      } catch (e) {\n        alert(`Error : ${e.message}`);\n      }\n    }\n  }\n};\n</script>\n"]}]}