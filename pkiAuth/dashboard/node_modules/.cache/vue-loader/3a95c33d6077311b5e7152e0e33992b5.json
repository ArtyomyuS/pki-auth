{"remainingRequest":"/home/vishwas/work/pki-auth/auth/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vishwas/work/pki-auth/auth/client/src/views/Register_pki.vue?vue&type=style&index=0&id=26068e6c&scoped=true&lang=css&","dependencies":[{"path":"/home/vishwas/work/pki-auth/auth/client/src/views/Register_pki.vue","mtime":1597556471887},{"path":"/home/vishwas/work/pki-auth/auth/client/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/auth/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/auth/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/auth/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/auth/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.addmargin {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.vue-logo-back {\n  background-color: black;\n}\n\n.logo {\n  width: 144px;\n}\n\n.fullbody {\n  width: 100%;\n}\n\n.floatLeft {\n  float: left;\n}\n.floatRight {\n  float: right;\n}\n",{"version":3,"sources":["Register_pki.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Register_pki.vue","sourceRoot":"src/views","sourcesContent":["<style scoped>\n.addmargin {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.vue-logo-back {\n  background-color: black;\n}\n\n.logo {\n  width: 144px;\n}\n\n.fullbody {\n  width: 100%;\n}\n\n.floatLeft {\n  float: left;\n}\n.floatRight {\n  float: right;\n}\n</style>\n<template>\n  <div class=\"home\">\n    <div class=\"row\">\n      <div class=\"col-md-4\" style=\"margin-left: 17%;\">\n        <b-card no-body style=\"padding: 40px\">\n          <h2>Sign Up</h2>\n          <hr />\n          <div class=\"row\">\n            <form action=\"#\" class=\"col-md-12\">\n              <div class=\"form-group\">\n                Full Name:\n                <input type=\"text\" class=\"form-control\" v-model=\"fullName\" required />\n              </div>\n              <div class=\"form-group\">\n                Email:\n                <input type=\"email\" class=\"form-control\" v-model=\"email\" required />\n              </div>\n              <div class=\"form-group\">\n                Phone Number:\n                <input type=\"text\" class=\"form-control\" v-model=\"telephone\" required />\n              </div>\n              <div class=\"form-group\">\n                Birth Date:\n                <input type=\"text\" class=\"form-control\" v-model=\"birthdate\" required />\n              </div>\n              <div class=\"form-group\">\n                Job Title:\n                <input type=\"text\" class=\"form-control\" v-model=\"jobTitle\" required />\n              </div>\n            </form>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <button\n                type=\"button\"\n                data-toggle=\"modal\"\n                @click=\"generateCredsDocs()\"\n                class=\"btn btn-primary\"\n              >Generate Documents</button>\n            </div>\n            <div class=\"col-md-3\">\n              <button\n                type=\"button\"\n                data-toggle=\"modal\"\n                @click=\"signup()\"\n                class=\"btn btn-primary\"\n              >Signup</button>\n            </div>\n            <div class=\"col-md-3\">\n              Back to\n              <a href=\"/login\">Login</a>\n            </div>\n          </div>\n        </b-card>\n      </div>\n      <div class=\"col-md-4\">\n        <b-card no-body style=\"padding: 40px\">\n          <h2>Documents</h2>\n          <hr />\n          <div class=\"row\">\n            <form action=\"#\" class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label class=\"floatLeft\">credentials.json:</label>\n                <textarea class=\"form-control\" v-model=\"credentials\" rows=\"6\" cols=\"50\"></textarea>\n              </div>\n              <div class=\"form-group floatLeft\">\n                <button\n                type=\"button\"\n                data-toggle=\"modal\"\n                @click=\"downloadCredentials()\"\n                class=\"btn btn-primary\"\n              >Download</button>\n              </div>\n          </form>\n          </div>\n          <div class=\"row\">\n            <form action=\"#\" class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label class=\"floatLeft\">userDoc.json:</label>\n                <textarea class=\"form-control\" v-model=\"userData\" rows=\"6\" cols=\"50\"></textarea>\n              </div>\n              <div class=\"form-group floatLeft\">\n                <button\n                type=\"button\"\n                data-toggle=\"modal\"\n                @click=\"downloadUserDoc()\"\n                class=\"btn btn-primary\"\n              >Download</button>\n              </div>\n          </form>\n          </div>\n        </b-card>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport fetch from \"node-fetch\";\nimport { getUserDoc, getCredential } from \"lds-sdk\";\nconst {sha256hashStr} = require(\"../crypto-lib/symmetric\");\nexport default {\n  name: \"Register\",\n  components: {},\n  data() {\n    return {\n      active: 0,\n      fullName: \"Amit Kumar\",\n      email: \"amit@gmail.com\",\n      telephone: \"8323210123\",\n      publicKey: \"ak_h7Hw9UD9JUPUtyZ54Es2BhFFiBo22aD2k615LtHshxpZ68dqJ\",\n      username: \"Amit\",\n      password: \"Amit\",\n      birthdate: \"16/11/1992\",\n      jobTitle: \"Engineer\",\n      host: location.hostname,\n      credentials: \"\",\n      userData: \"\"\n    };\n  },\n  created() {},\n  methods: {\n    gotosubpage: (id) => {\n      this.$router.push(`${id}`);\n    },\n    async generateCredsDocs(){\n      const userData = {\n        name: this.fullName,\n        email: this.email,\n        telephone: this.phoneNumber,\n        birthdate: this.birthdate,\n        jobTitle: this.jobTitle,\n      };\n      const userDoc = await getUserDoc(userData);\n      this.userData = JSON.stringify(userDoc);\n\n      const creds = await getCredential(this.fullName);\n      this.credentials = JSON.stringify(creds);\n    },\n    forceFileDownload(data, fileName) {\n      const url = window.URL.createObjectURL(new Blob([data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", fileName);\n      document.body.appendChild(link);\n      link.click();\n    },\n    downloadCredentials() {\n      this.forceFileDownload(this.credentials, \"credentials.json\");\n    },\n    downloadUserDoc() {\n      this.forceFileDownload(this.userData, \"userDoc.json\");\n    },\n    signup() {\n      try {\n        if(this.credentials == \"\" || this.credentials === \"\") throw new Error(\"Click on 'Generate Document' button to first generate crypto credentials\")\n\n        const creds = JSON.parse(this.credentials);\n        const userData = {\n          id: \"\",\n          fname: \"\",\n          lname: \"\",\n          phoneNumber: \"\",\n          username: \"\",\n          password: \"\",\n          email: \"\",\n          publicKey: creds.keys.publicKey.publicKeyBase58,\n          privateKey: creds.keys.publicKey.publicKeyBase58,\n          hash: sha256hashStr(this.userData)\n        };\n        const url = `http://${this.host}:5000/api/auth/register`;\n        fetch(url, {\n          body: JSON.stringify(userData),\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n        })\n          .then((res) => res.json())\n          .then((j) => {\n            if (j && j.status == 500) {\n              return alert(`Error:  ${j.error}`);\n            }\n            this.$router.push(\"login\");\n          });\n      } catch (e) {\n        alert(e);\n      }\n    },\n  },\n};\n</script>\n\n\n"]}]}