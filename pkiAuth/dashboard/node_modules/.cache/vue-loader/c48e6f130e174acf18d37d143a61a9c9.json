{"remainingRequest":"/home/vishwas/work/pki-auth/pkiAuth/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vishwas/work/pki-auth/pkiAuth/dashboard/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vishwas/work/pki-auth/pkiAuth/dashboard/src/views/Home.vue","mtime":1597750303511},{"path":"/home/vishwas/work/pki-auth/pkiAuth/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/pkiAuth/dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/pkiAuth/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/pkiAuth/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Hash from \"@/components/Hash.vue\";\nimport Asymmetric from \"@/components/Asymmetric.vue\";\nimport Symmetric from \"@/components/Symmetric.vue\";\nimport Introduction from \"@/components/Introduction.vue\";\nimport ZKP from \"@/components/zkp.vue\";\nexport default {\n  name: \"PanelPage\",\n  mounted() {\n  },\n  components: {\n    Hash,\n    Asymmetric,\n    Symmetric,\n    Introduction,\n    ZKP\n  },\n  data() {\n    return {\n      active: 0,\n      userKeys: [],\n      appList: [],\n      user: {},\n      appName: \"\",\n      authToken: localStorage.getItem('authToken')\n    };\n  },\n  created() {\n    const usrStr = localStorage.getItem('user')\n    this.user = JSON.parse(usrStr);\n    this.userKeys = Object.keys(this.user)\n\n    // const authToken = localStorage.getItem('authToken')\n\n    const url = `http://${location.hostname}:5000/api/app/list`;\n    fetch(url,{\n        headers: {\n          'x-auth-token': this.authToken\n        },\n        method: 'POST'\n      })\n    .then(res => res.json())\n    .then(json => {\n      if(json.status == 200){\n        this.appList = json.message.list\n        console.log(this.appList)\n      }\n    })\n    .catch(e => alert(`Error: ${e.message}`))\n  },\n  methods: {\n    gotosubpage: id => {\n      this.$router.push(`${id}`);\n    },\n    logout(){\n      localStorage.removeItem('authToken')\n      localStorage.removeItem('user')\n      localStorage.removeItem(\"credentials\")\n      localStorage.removeItem(\"userData\")\n      \n      if(this.$route.params.nextUrl != null){\n                    this.$router.push(this.$route.params.nextUrl)\n                }else{\n        this.$router.push('login')\n                }\n    },\n    createApp(){\n      if(!this.appName) alert('AppName can not be blank')\n      const url = `http://${location.hostname}:5000/api/app/register`;\n      console.log(this.appName)\n      const appData = {\n        name: this.appName\n      }\n      console.log(appData)\n      fetch(url,{\n          body: JSON.stringify(appData),\n          method: 'POST',\n          headers: {\n            'x-auth-token': this.authToken,\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        })\n      .then(res => res.json())\n      .then(json => {\n        if(json.status == 200){\n          this.appList.push(json.message)\n          console.log(json.message.appId)\n        }\n      })\n      .catch(e => alert(`Error: ${e.message}`))\n    }\n\n  }\n};\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<style scoped>\n.addmargin {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.vue-logo-back {\n  background-color: black;\n}\n\n.logo {\n  width: 144px;\n}\n\n.fullbody {\n  width: 100%;\n}\n.floatLeft{\n  float: left;\n}\n\n.noBullet{\n  list-style-type:none;\n}\n\n.title {\n  color: grey;\n  font-size: 18px;\n}\n\n</style>\n<template>\n  <div class=\"home\">\n    <div class=\"col-md-8 centeralign\">\n    <div class=\"row\">\n      <div class=\"col-md-6\" >\n        <h3 style=\"float:left\">Admin Dashboard</h3>\n      </div>\n      <div class=\"col-md-6\" >\n        <!-- <h5 style=\"float:left\">Welcome {{user.email}}! </h5> -->\n        <button  style=\"float:right\" type=\"button\"\n                        data-toggle=\"modal\"\n                        @click=\"logout()\"\n                        class=\"btn btn-outline-primary\">Logout</button>\n      </div>\n    </div>\n    <div class=\"row\" style=\"margin-top: 2%\">\n      <div class=\"col-md-4\">\n        <!-- <b-card no-body style=\"padding: 20px\">    \n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <h3>Your Profile:</h3>\n                <hr/>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                  <table class=\"table table-bordered\">\n                    <tr v-for=\"item in userKeys\" :key=\"item\" >\n                      <td v-if=\"user[item] != '' && item != 'password'\" style=\"word-wrap: break-word; text-align:left\">{{item}}</td>\n                      <td v-if=\"user[item] != '' && item != 'password'\" style=\"word-wrap: break-word; text-align:left\">{{ user[item] }}</td>\n                    </tr>\n                  </table>\n              </div>\n            </div>\n\n        </b-card> -->\n<div class=\"card\">\n  <img src=\"https://cdn1.iconfinder.com/data/icons/female-avatars-vol-1/256/female-portrait-avatar-profile-woman-sexy-afro-2-512.png\" alt=\"John\" style=\"width:100%;\" >\n  <h2>{{user.fname}}</h2>\n  <!-- <p class=\"title\">CEO & Founder, Example</p> -->\n  <p class=\"title\">{{user.id}}</p>\n  <p class=\"title\">{{user.email}} | +91-{{user.phoneNumber}}</p>\n  <p class=\"title\"> {{user.username}}</p>\n</div>\n\n      </div>\n      <div class=\"col-md-8\">\n        <b-card no-body style=\"padding: 20px\">\n          <h3 style=\"text-align:left\">Your Applications</h3>\n            <hr/>\n            \n            <div class=\"row\" >\n              <div class=\"col-md-6 floatRight\">\n                <input type=\"text\" placeholder=\"Enter App Name\" size=\"35\" v-model=\"appName\" required>\n                    <button  style=\"float:right\" type=\"button\"\n                        data-toggle=\"modal\"\n                        @click=\"createApp()\"\n                        class=\"btn btn-outline-primary\">+</button>\n              </div>\n              <div class=\"col-md-6 floatRight\">\n                    \n              </div>\n            </div>\n            <hr/>\n            <div class=\"row\" style=\"max-height: 621px;overflow: auto;\">\n              <div class=\"col-md-12\">\n                 <ul class=\"noBullet\">\n                    <li class=\"floatLeft\" style=\"margin-right: 9px;margin-bottom: 9px\" v-for=\"app in appList\" :key=\"app\">\n                      <div class=\"card\" style=\"width: 25rem;text-align: left\">\n                        <div class=\"card-body\">\n                          <h5 class=\"card-title\">{{app.name}}</h5>\n                          <hr/>\n                            <p class=\"card-text\" style=\"padding: 2px;\">\n                              <ul>\n                                <li>\n                                  <b>App Id: </b>{{app.appId}}\n                                </li>\n                                <li>\n                                  <b>App Secret: </b>{{app.appSecret}}\n                                </li>\n                                <li>\n                                  <b># of Login: </b><label>12</label>\n                                </li>\n                              </ul>\n                            </p>\n                            <hr/>\n                          <a href=\"#\" class=\"card-link\">Card link</a>\n                        </div>\n                      </div>\n                    </li>\n                  </ul>\n              </div>\n            </div>\n        </b-card>\n      </div>\n    </div>\n      \n      \n    </div>\n  </div>\n</template>\n\n<script>\nimport Hash from \"@/components/Hash.vue\";\nimport Asymmetric from \"@/components/Asymmetric.vue\";\nimport Symmetric from \"@/components/Symmetric.vue\";\nimport Introduction from \"@/components/Introduction.vue\";\nimport ZKP from \"@/components/zkp.vue\";\nexport default {\n  name: \"PanelPage\",\n  mounted() {\n  },\n  components: {\n    Hash,\n    Asymmetric,\n    Symmetric,\n    Introduction,\n    ZKP\n  },\n  data() {\n    return {\n      active: 0,\n      userKeys: [],\n      appList: [],\n      user: {},\n      appName: \"\",\n      authToken: localStorage.getItem('authToken')\n    };\n  },\n  created() {\n    const usrStr = localStorage.getItem('user')\n    this.user = JSON.parse(usrStr);\n    this.userKeys = Object.keys(this.user)\n\n    // const authToken = localStorage.getItem('authToken')\n\n    const url = `http://${location.hostname}:5000/api/app/list`;\n    fetch(url,{\n        headers: {\n          'x-auth-token': this.authToken\n        },\n        method: 'POST'\n      })\n    .then(res => res.json())\n    .then(json => {\n      if(json.status == 200){\n        this.appList = json.message.list\n        console.log(this.appList)\n      }\n    })\n    .catch(e => alert(`Error: ${e.message}`))\n  },\n  methods: {\n    gotosubpage: id => {\n      this.$router.push(`${id}`);\n    },\n    logout(){\n      localStorage.removeItem('authToken')\n      localStorage.removeItem('user')\n      localStorage.removeItem(\"credentials\")\n      localStorage.removeItem(\"userData\")\n      \n      if(this.$route.params.nextUrl != null){\n                    this.$router.push(this.$route.params.nextUrl)\n                }else{\n        this.$router.push('login')\n                }\n    },\n    createApp(){\n      if(!this.appName) alert('AppName can not be blank')\n      const url = `http://${location.hostname}:5000/api/app/register`;\n      console.log(this.appName)\n      const appData = {\n        name: this.appName\n      }\n      console.log(appData)\n      fetch(url,{\n          body: JSON.stringify(appData),\n          method: 'POST',\n          headers: {\n            'x-auth-token': this.authToken,\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        })\n      .then(res => res.json())\n      .then(json => {\n        if(json.status == 200){\n          this.appList.push(json.message)\n          console.log(json.message.appId)\n        }\n      })\n      .catch(e => alert(`Error: ${e.message}`))\n    }\n\n  }\n};\n</script>\n"]}]}