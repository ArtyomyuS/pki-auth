{"remainingRequest":"/home/vishwas/work/pki-auth/pkiAuth/client/node_modules/babel-loader/lib/index.js!/home/vishwas/work/pki-auth/pkiAuth/client/node_modules/eslint-loader/index.js??ref--13-0!/home/vishwas/work/pki-auth/pkiAuth/client/src/router.js","dependencies":[{"path":"/home/vishwas/work/pki-auth/pkiAuth/client/src/router.js","mtime":1597601812928},{"path":"/home/vishwas/work/pki-auth/pkiAuth/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/pkiAuth/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/pkiAuth/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Router from 'vue-router';\nimport Login from \"./views/Login.vue\";\nimport Register from \"./views/Register.vue\";\nimport Register_PKI from \"./views/Register_pki.vue\";\nimport Customers from \"./views/Customers.vue\";\nimport CustomerDetails from \"./views/CustomerDetails.vue\";\nimport Crypto from \"./views/Crypto.vue\";\nimport Home from \"./views/Home.vue\";\nimport fetch from 'node-fetch';\nVue.use(Router);\nvar router = new Router({\n  mode: 'history',\n  routes: [{\n    path: '/',\n    redirect: '/login'\n  }, {\n    path: '/login',\n    name: 'login',\n    component: Login\n  }, {\n    path: '/register',\n    name: 'register',\n    component: Register\n  }, {\n    path: '/register_pki',\n    name: 'register_pki',\n    component: Register_PKI\n  }, {\n    path: '/customers',\n    name: 'customers',\n    component: Customers\n  }, {\n    path: '/customerdetails/:id',\n    name: 'customerdetails',\n    component: CustomerDetails\n  }, {\n    path: '/crypto',\n    name: 'crypto',\n    component: Home,\n    meta: {\n      requiresAuth: true\n    }\n  }]\n});\nrouter.beforeEach(function (to, from, next) {\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    var authToken = localStorage.getItem('authToken');\n\n    if (authToken) {\n      var url = \"http://\".concat(location.hostname, \":5000/api/auth/verify\");\n      fetch(url, {\n        headers: {\n          'x-auth-token': authToken\n        },\n        method: 'POST'\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (json.status == 403) {\n          next({\n            path: '/login',\n            params: {\n              nextUrl: to.fullPath\n            }\n          });\n        } else {\n          next();\n        }\n      }).catch(function (e) {\n        next({\n          path: '/login',\n          params: {\n            nextUrl: to.fullPath\n          }\n        });\n      });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;",{"version":3,"sources":["/home/vishwas/work/pki-auth/pkiAuth/client/src/router.js"],"names":["Vue","Router","Login","Register","Register_PKI","Customers","CustomerDetails","Crypto","Home","fetch","use","router","mode","routes","path","redirect","name","component","meta","requiresAuth","beforeEach","to","from","next","matched","some","record","authToken","localStorage","getItem","url","location","hostname","headers","method","then","res","json","status","params","nextUrl","fullPath","catch","e"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AACA,OAAOC,YAAP;AACA,OAAOC,SAAP;AACA,OAAOC,eAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP,MAAkB,YAAlB;AAEAT,GAAG,CAACU,GAAJ,CAAQT,MAAR;AAEA,IAAMU,MAAM,GAAI,IAAIV,MAAJ,CAAW;AACzBW,EAAAA,IAAI,EAAE,SADmB;AAEzBC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,GADR;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GADM,EAKN;AACED,IAAAA,IAAI,EAAE,QADR;AAEEE,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,SAAS,EAAEf;AAHb,GALM,EAUN;AACEY,IAAAA,IAAI,EAAE,WADR;AAEEE,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,SAAS,EAAEd;AAHb,GAVM,EAeN;AACEW,IAAAA,IAAI,EAAE,eADR;AAEEE,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,SAAS,EAAEb;AAHb,GAfM,EAoBN;AACEU,IAAAA,IAAI,EAAE,YADR;AAEEE,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,SAAS,EAAEZ;AAHb,GApBM,EAyBN;AACES,IAAAA,IAAI,EAAE,sBADR;AAEEE,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,SAAS,EAAEX;AAHb,GAzBM,EA8BN;AACEQ,IAAAA,IAAI,EAAE,SADR;AAEEE,IAAAA,IAAI,EAAE,QAFR;AAGEC,IAAAA,SAAS,EAAET,IAHb;AAIEU,IAAAA,IAAI,EAAE;AACJC,MAAAA,YAAY,EAAE;AADV;AAJR,GA9BM;AAFiB,CAAX,CAAhB;AA2CAR,MAAM,CAACS,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AACpC,MAAGF,EAAE,CAACG,OAAH,CAAWC,IAAX,CAAgB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACR,IAAP,CAAYC,YAAhB;AAAA,GAAtB,CAAH,EAAuD;AACrD,QAAMQ,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;;AACA,QAAGF,SAAH,EAAa;AACX,UAAMG,GAAG,oBAAaC,QAAQ,CAACC,QAAtB,0BAAT;AACAvB,MAAAA,KAAK,CAACqB,GAAD,EAAK;AACRG,QAAAA,OAAO,EAAE;AACP,0BAAgBN;AADT,SADD;AAIRO,QAAAA,MAAM,EAAE;AAJA,OAAL,CAAL,CAKGC,IALH,CAKQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OALX,EAMCF,IAND,CAMM,UAAAE,IAAI,EAAI;AACZ,YAAGA,IAAI,CAACC,MAAL,IAAe,GAAlB,EAAsB;AACpBf,UAAAA,IAAI,CAAC;AACHT,YAAAA,IAAI,EAAE,QADH;AAEHyB,YAAAA,MAAM,EAAE;AAAEC,cAAAA,OAAO,EAAGnB,EAAE,CAACoB;AAAf;AAFL,WAAD,CAAJ;AAID,SALD,MAKK;AACHlB,UAAAA,IAAI;AACL;AACF,OAfD,EAgBCmB,KAhBD,CAgBO,UAACC,CAAD,EAAM;AACXpB,QAAAA,IAAI,CAAC;AACHT,UAAAA,IAAI,EAAE,QADH;AAEHyB,UAAAA,MAAM,EAAE;AAAEC,YAAAA,OAAO,EAAGnB,EAAE,CAACoB;AAAf;AAFL,SAAD,CAAJ;AAID,OArBD;AAsBD,KAxBD,MAwBK;AACHlB,MAAAA,IAAI;AACL;AACF,GA7BD,MA6BK;AACHA,IAAAA,IAAI;AACL;AACF,CAjCD;AAkCA,eAAeZ,MAAf","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport Login from './views/Login.vue'\nimport Register from './views/Register.vue'\nimport Register_PKI from './views/Register_pki.vue'\nimport Customers from './views/Customers.vue'\nimport CustomerDetails from './views/CustomerDetails.vue'\nimport Crypto from './views/Crypto.vue'\nimport Home from './views/Home.vue'\nimport fetch from 'node-fetch'\n\nVue.use(Router)\n\nconst router =  new Router({\n  mode: 'history',\n  routes: [\n    {\n      path: '/',\n      redirect: '/login'\n    },\n    {\n      path: '/login',\n      name: 'login',\n      component: Login\n    },\n    {\n      path: '/register',\n      name: 'register',\n      component: Register\n    },\n    {\n      path: '/register_pki',\n      name: 'register_pki',\n      component: Register_PKI\n    },\n    {\n      path: '/customers',\n      name: 'customers',\n      component: Customers\n    },\n    {\n      path: '/customerdetails/:id',\n      name: 'customerdetails',\n      component: CustomerDetails\n    },\n    {\n      path: '/crypto',\n      name: 'crypto',\n      component: Home,\n      meta: {\n        requiresAuth: true\n      } \n    }\n  ]\n})\n\nrouter.beforeEach((to, from, next) => {\n  if(to.matched.some(record => record.meta.requiresAuth)){\n    const authToken = localStorage.getItem('authToken')\n    if(authToken){\n      const url = `http://${location.hostname}:5000/api/auth/verify`\n      fetch(url,{\n        headers: {\n          'x-auth-token': authToken\n        },\n        method: 'POST'\n      }).then(res => res.json())\n      .then(json => {\n        if(json.status == 403){\n          next({\n            path: '/login',\n            params: { nextUrl:  to.fullPath}\n          })  \n        }else{\n          next()\n        }\n      })\n      .catch((e)=> {\n        next({\n          path: '/login',\n          params: { nextUrl:  to.fullPath}\n        })\n      })\n    }else{\n      next()\n    }\n  }else{\n    next()\n  }\n})\nexport default router\n"]}]}