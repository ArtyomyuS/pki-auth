{"remainingRequest":"/home/vishwas/work/pki-auth/pkiAuth/dashboard/node_modules/babel-loader/lib/index.js!/home/vishwas/work/pki-auth/pkiAuth/dashboard/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vishwas/work/pki-auth/pkiAuth/dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vishwas/work/pki-auth/pkiAuth/dashboard/src/views/PKIIdLogin.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vishwas/work/pki-auth/pkiAuth/dashboard/src/views/PKIIdLogin.vue","mtime":1597728836989},{"path":"/home/vishwas/work/pki-auth/pkiAuth/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/pkiAuth/dashboard/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/pkiAuth/dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vishwas/work/pki-auth/pkiAuth/dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/vishwas/work/pki-auth/pkiAuth/dashboard/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\nvar _this2 = this;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getChallange } from \"lds-sdk\";\nimport QrcodeVue from \"qrcode.vue\";\nimport { sign } from \"lds-sdk\";\nimport { encryptData } from \"../crypto-lib/symmetric\";\n\nvar _require = require(\"../crypto-lib/symmetric\"),\n    sha256hashStr = _require.sha256hashStr;\n\nexport default {\n  name: \"Login\",\n  components: {\n    QrcodeVue: QrcodeVue\n  },\n  data: function data() {\n    return {\n      active: 0,\n      username: \"\",\n      password: \"\",\n      host: location.hostname,\n      challenge: \"dddd\",\n      domain: location.host,\n      QRCodeValue: this.$route.query,\n      credentials: {},\n      userData: {},\n      proof: \"\"\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    var url = \"http://\".concat(this.host, \":5000/api/auth/challenge\");\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      if (json.status == 200) {\n        _this.challenge = json.message;\n      }\n    }).catch(function (e) {\n      return alert(\"Error: \".concat(e.message));\n    });\n  },\n  mounted: function mounted() {},\n  methods: {\n    gotosubpage: function gotosubpage(id) {\n      _this2.$router.push(\"\".concat(id));\n    },\n    generateProof: function () {\n      var _generateProof = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var p;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.credentials = JSON.parse(localStorage.getItem(\"credentials\"));\n                this.userData = JSON.parse(localStorage.getItem(\"userData\"));\n\n                if (!((this.credentials && this.credentials['controller']) != null && this.userData != null && this.userData['@context'])) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 5;\n                return sign({\n                  doc: this.userData,\n                  privateKeyBase58: this.credentials.keys.privateKeyBase58,\n                  publicKey: this.credentials.keys.publicKey,\n                  challenge: this.challenge.challenge,\n                  domain: this.domain\n                });\n\n              case 5:\n                p = _context.sent;\n                this.proof = JSON.stringify(p);\n                _context.next = 10;\n                break;\n\n              case 9:\n                throw new Error(\"Both files are needed for generating proof\");\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function generateProof() {\n        return _generateProof.apply(this, arguments);\n      }\n\n      return generateProof;\n    }(),\n    forceFileDownload: function forceFileDownload(data, fileName) {\n      var url = window.URL.createObjectURL(new Blob([data]));\n      var link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", fileName);\n      document.body.appendChild(link);\n      link.click();\n    },\n    downloadProof: function () {\n      var _downloadProof = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.generateProof();\n\n              case 2:\n                this.forceFileDownload(this.proof, \"proof.json\");\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function downloadProof() {\n        return _downloadProof.apply(this, arguments);\n      }\n\n      return downloadProof;\n    }(),\n    onFileChange: function onFileChange(event) {\n      try {\n        var readSuccess = function readSuccess(evt) {\n          var fileJSON = JSON.parse(evt.target.result);\n          if (!fileJSON) throw new Error(\"Incorrect file\");\n\n          if (fileJSON[\"controller\"]) {\n            localStorage.setItem(\"credentials\", JSON.stringify(fileJSON));\n          } else if (fileJSON[\"@context\"]) {\n            localStorage.setItem(\"userData\", JSON.stringify(fileJSON));\n          } else {\n            throw new Error(\"Incorrect file\");\n          }\n        };\n\n        var file = event.target.files[0];\n        var reader = new FileReader();\n        reader.onload = readSuccess;\n        reader.readAsText(file);\n      } catch (e) {\n        alert(\"Error: \".concat(e.message));\n      }\n    },\n    login: function () {\n      var _login = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(type) {\n        var _this3 = this;\n\n        var url, headers, userData;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                url = \"\";\n                headers = {\n                  \"Content-Type\": \"application/json\"\n                };\n\n                if (!(type === \"PKI\")) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                url = \"http://\".concat(this.host, \":5000/api/auth/login_pki?type=PKI\");\n                headers['x-auth-token'] = this.challenge.JWTChallenge;\n                _context3.next = 8;\n                return this.generateProof();\n\n              case 8:\n                _context3.next = 11;\n                break;\n\n              case 10:\n                url = \"http://\".concat(this.host, \":5000/api/auth/login\");\n\n              case 11:\n                userData = {\n                  username: this.username,\n                  password: this.password != \"\" ? sha256hashStr(this.password) : this.password,\n                  proof: this.proof,\n                  controller: this.credentials ? this.credentials.controller : {},\n                  publicKey: this.credentials && this.credentials.keys ? this.credentials.keys.publicKey : {},\n                  challenge: this.challenge ? this.challenge.challenge : \"\",\n                  domain: this.domain\n                };\n                fetch(url, {\n                  body: JSON.stringify(userData),\n                  method: \"POST\",\n                  headers: headers\n                }).then(function (res) {\n                  return res.json();\n                }).then(function (j) {\n                  if (j && j.status == 500) {\n                    return alert(\"Error:  \".concat(j.error));\n                  }\n\n                  console.log(_this3.$route.query);\n                  console.log(j.message);\n                  var encryptedUserData = encryptData(_this3.$route.query.appId, JSON.stringify(j.message.user));\n                  var redirect_uri = _this3.$route.query.redirect_uri + '?userData=' + encryptedUserData;\n                  window.location.href = redirect_uri; // localStorage.setItem(\"authToken\", j.message.jwtToken);\n                  // localStorage.setItem(\"user\", JSON.stringify(j.message.user));\n                  // if (localStorage.getItem(\"authToken\") != null) {\n                  //   if (this.$route.params.nextUrl != null) {\n                  //     this.$router.push(this.$route.params.nextUrl);\n                  //   } else {\n                  //     this.$router.push(\"crypto\");\n                  //   }\n                  // }\n                });\n                _context3.next = 18;\n                break;\n\n              case 15:\n                _context3.prev = 15;\n                _context3.t0 = _context3[\"catch\"](0);\n                alert(\"Error: \".concat(_context3.t0.message));\n\n              case 18:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 15]]);\n      }));\n\n      function login(_x) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }\n};",{"version":3,"sources":["PKIIdLogin.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA,SAAA,YAAA,QAAA,SAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,SAAA,IAAA,QAAA,SAAA;AACA,SAAA,WAAA;;eACA,OAAA,2B;IAAA,a,YAAA,a;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,CADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,QAAA,EAAA,EAHA;AAIA,MAAA,IAAA,EAAA,QAAA,CAAA,QAJA;AAKA,MAAA,SAAA,EAAA,MALA;AAMA,MAAA,MAAA,EAAA,QAAA,CAAA,IANA;AAOA,MAAA,WAAA,EAAA,KAAA,MAAA,CAAA,KAPA;AAQA,MAAA,WAAA,EAAA,EARA;AASA,MAAA,QAAA,EAAA,EATA;AAUA,MAAA,KAAA,EAAA;AAVA,KAAA;AAYA,GAlBA;AAmBA,EAAA,OAnBA,qBAmBA;AAAA;;AACA,QAAA,GAAA,oBAAA,KAAA,IAAA,6BAAA;AACA,IAAA,KAAA,CAAA,GAAA,CAAA,CACA,IADA,CACA,UAAA,GAAA;AAAA,aAAA,GAAA,CAAA,IAAA,EAAA;AAAA,KADA,EAEA,IAFA,CAEA,UAAA,IAAA,EAAA;AACA,UAAA,IAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA,QAAA,KAAA,CAAA,SAAA,GAAA,IAAA,CAAA,OAAA;AACA;AACA,KANA,EAOA,KAPA,CAOA,UAAA,CAAA;AAAA,aAAA,KAAA,kBAAA,CAAA,CAAA,OAAA,EAAA;AAAA,KAPA;AAQA,GA7BA;AA8BA,EAAA,OA9BA,qBA8BA,CAEA,CAhCA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,WAAA,EAAA,qBAAA,EAAA,EAAA;AACA,MAAA,MAAA,CAAA,OAAA,CAAA,IAAA,WAAA,EAAA;AACA,KAHA;AAIA,IAAA,aAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,qBAAA,WAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,aAAA,CAAA,CAAA;AACA,qBAAA,QAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;;AANA,sBAOA,CAAA,KAAA,WAAA,IAAA,KAAA,WAAA,CAAA,YAAA,CAAA,KAAA,IAAA,IAAA,KAAA,QAAA,IAAA,IAAA,IAAA,KAAA,QAAA,CAAA,UAAA,CAPA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQA,IAAA,CAAA;AACA,kBAAA,GAAA,EAAA,KAAA,QADA;AAEA,kBAAA,gBAAA,EAAA,KAAA,WAAA,CAAA,IAAA,CAAA,gBAFA;AAGA,kBAAA,SAAA,EAAA,KAAA,WAAA,CAAA,IAAA,CAAA,SAHA;AAIA,kBAAA,SAAA,EAAA,KAAA,SAAA,CAAA,SAJA;AAKA,kBAAA,MAAA,EAAA,KAAA;AALA,iBAAA,CARA;;AAAA;AAQA,gBAAA,CARA;AAeA,qBAAA,KAAA,GAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AAfA;AAAA;;AAAA;AAAA,sBAiBA,IAAA,KAAA,CAAA,4CAAA,CAjBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAoBA,IAAA,iBApBA,6BAoBA,IApBA,EAoBA,QApBA,EAoBA;AACA,UAAA,GAAA,GAAA,MAAA,CAAA,GAAA,CAAA,eAAA,CAAA,IAAA,IAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,UAAA,IAAA,GAAA,QAAA,CAAA,aAAA,CAAA,GAAA,CAAA;AACA,MAAA,IAAA,CAAA,IAAA,GAAA,GAAA;AACA,MAAA,IAAA,CAAA,YAAA,CAAA,UAAA,EAAA,QAAA;AACA,MAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,IAAA;AACA,MAAA,IAAA,CAAA,KAAA;AACA,KA3BA;AA4BA,IAAA,aA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA6BA,KAAA,aAAA,EA7BA;;AAAA;AA8BA,qBAAA,iBAAA,CAAA,KAAA,KAAA,EAAA,YAAA;;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgCA,IAAA,YAhCA,wBAgCA,KAhCA,EAgCA;AACA,UAAA;AAAA,YAIA,WAJA,GAIA,SAAA,WAAA,CAAA,GAAA,EAAA;AACA,cAAA,QAAA,GAAA,IAAA,CAAA,KAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACA,cAAA,CAAA,QAAA,EAAA,MAAA,IAAA,KAAA,CAAA,gBAAA,CAAA;;AACA,cAAA,QAAA,CAAA,YAAA,CAAA,EAAA;AACA,YAAA,YAAA,CAAA,OAAA,CAAA,aAAA,EAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA;AACA,WAFA,MAEA,IAAA,QAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,YAAA,CAAA,OAAA,CAAA,UAAA,EAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA;AACA,WAFA,MAEA;AACA,kBAAA,IAAA,KAAA,CAAA,gBAAA,CAAA;AACA;AACA,SAdA;;AACA,YAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,YAAA,MAAA,GAAA,IAAA,UAAA,EAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,WAAA;AAYA,QAAA,MAAA,CAAA,UAAA,CAAA,IAAA;AACA,OAhBA,CAgBA,OAAA,CAAA,EAAA;AACA,QAAA,KAAA,kBAAA,CAAA,CAAA,OAAA,EAAA;AACA;AACA,KApDA;AAqDA,IAAA,KArDA;AAAA,6FAqDA,IArDA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuDA,gBAAA,GAvDA,GAuDA,EAvDA;AAwDA,gBAAA,OAxDA,GAwDA;AACA,kCAAA;AADA,iBAxDA;;AAAA,sBA2DA,IAAA,KAAA,KA3DA;AAAA;AAAA;AAAA;;AA4DA,gBAAA,GAAA,oBAAA,KAAA,IAAA,sCAAA;AACA,gBAAA,OAAA,CAAA,cAAA,CAAA,GAAA,KAAA,SAAA,CAAA,YAAA;AA7DA;AAAA,uBA8DA,KAAA,aAAA,EA9DA;;AAAA;AAAA;AAAA;;AAAA;AAgEA,gBAAA,GAAA,oBAAA,KAAA,IAAA,yBAAA;;AAhEA;AAkEA,gBAAA,QAlEA,GAkEA;AACA,kBAAA,QAAA,EAAA,KAAA,QADA;AAEA,kBAAA,QAAA,EAAA,KAAA,QAAA,IAAA,EAAA,GAAA,aAAA,CAAA,KAAA,QAAA,CAAA,GAAA,KAAA,QAFA;AAGA,kBAAA,KAAA,EAAA,KAAA,KAHA;AAIA,kBAAA,UAAA,EAAA,KAAA,WAAA,GAAA,KAAA,WAAA,CAAA,UAAA,GAAA,EAJA;AAKA,kBAAA,SAAA,EAAA,KAAA,WAAA,IAAA,KAAA,WAAA,CAAA,IAAA,GAAA,KAAA,WAAA,CAAA,IAAA,CAAA,SAAA,GAAA,EALA;AAMA,kBAAA,SAAA,EAAA,KAAA,SAAA,GAAA,KAAA,SAAA,CAAA,SAAA,GAAA,EANA;AAOA,kBAAA,MAAA,EAAA,KAAA;AAPA,iBAlEA;AA4EA,gBAAA,KAAA,CAAA,GAAA,EAAA;AACA,kBAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CADA;AAEA,kBAAA,MAAA,EAAA,MAFA;AAGA,kBAAA,OAAA,EAAA;AAHA,iBAAA,CAAA,CAKA,IALA,CAKA,UAAA,GAAA;AAAA,yBAAA,GAAA,CAAA,IAAA,EAAA;AAAA,iBALA,EAMA,IANA,CAMA,UAAA,CAAA,EAAA;AACA,sBAAA,CAAA,IAAA,CAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA,2BAAA,KAAA,mBAAA,CAAA,CAAA,KAAA,EAAA;AACA;;AAEA,kBAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA,OAAA;AACA,sBAAA,iBAAA,GAAA,WAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,KAAA,EAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA,CAAA;AACA,sBAAA,YAAA,GAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,YAAA,GAAA,YAAA,GAAA,iBAAA;AACA,kBAAA,MAAA,CAAA,QAAA,CAAA,IAAA,GAAA,YAAA,CATA,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBA1BA;AA5EA;AAAA;;AAAA;AAAA;AAAA;AAwGA,gBAAA,KAAA,kBAAA,aAAA,OAAA,EAAA;;AAxGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjCA,CAAA","sourcesContent":["<style scoped>\n.addmargin {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.vue-logo-back {\n  background-color: black;\n}\n\n.logo {\n  width: 144px;\n}\n\n.fullbody {\n  width: 100%;\n}\n.floatLeft {\n  float: left;\n}\n.floatRight {\n  float: right;\n}\n</style>\n<template>\n  <!-- <div class=\"home\"> -->\n  <div class=\"row\">\n    <!-- <div class=\"col-md-4\" style=\"margin-left: 17%;\">\n      <b-card no-body style=\"padding: 40px\">\n        <h2>Basic Authentication</h2>\n        <hr />\n        <div class=\"row\">\n          <form action=\"#\" class=\"col-md-12\">\n            <div class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" v-model=\"username\" placeholder=\"Username\" />\n            </div>\n            <div class=\"form-group\">\n              <input type=\"password\" class=\"form-control\" v-model=\"password\" placeholder=\"Password\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <button\n              type=\"button\"\n              data-toggle=\"modal\"\n              @click=\"login('BASIC')\"\n              class=\"btn btn-primary floatLeft\"\n            >Login</button>\n          </div>\n          <div class=\"col-md-6 floatRight\">\n            Do not have account?\n            <a href=\"/register\">SignUp</a>\n          </div>\n        </div>\n      </b-card>\n    </div> -->\n    <div class=\"col-md-4\" style=\"margin-left: 34%\">\n      <b-card no-body style=\"padding: 40px\">\n        <h2>User Login</h2>\n        <hr />\n        <div class=\"row\">\n          <form action=\"#\" class=\"col-md-12\">\n            <div class=\"form-group\">\n              <qrcode-vue :value=\"QRCodeValue\" :size=\"200\" level=\"H\"></qrcode-vue>\n              <label>Scan this QR code to authenticate!</label>\n            </div>\n            <hr />\n            <h2>Or</h2>\n            <div class=\"form-group\">\n              <label class=\"floatLeft\">Upload User Doc:</label>\n              <input\n                type=\"file\"\n                class=\"form-control\"\n                placeholder\n                @change=\"onFileChange\"\n                accept=\"*.json\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label class=\"floatLeft\">Upload Credentials:</label>\n              <input type=\"file\" class=\"form-control\" placeholder @change=\"onFileChange\" />\n            </div>\n          </form>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">\n            <button\n              type=\"button\"\n              data-toggle=\"modal\"\n              @click=\"downloadProof()\"\n              class=\"btn btn-primary floatLeft\"\n            >View Proof</button>\n          </div>\n          <div class=\"col-md-3\">\n            <button\n              type=\"button\"\n              data-toggle=\"modal\"\n              @click=\"login('PKI')\"\n              class=\"btn btn-primary floatLeft\"\n            >Login</button>\n          </div>\n          <div class=\"col-md-6 floatRight\">\n            Do not have account?\n            <a href=\"/register_pki\">SignUp</a>\n          </div>\n        </div>\n      </b-card>\n    </div>\n  </div>\n  <!-- </div> -->\n</template>\n\n<script>\nimport { getChallange } from \"lds-sdk\";\nimport QrcodeVue from \"qrcode.vue\";\nimport { sign } from \"lds-sdk\";\nimport { encryptData } from '../crypto-lib/symmetric'\nconst {sha256hashStr} = require(\"../crypto-lib/symmetric\");\nexport default {\n  name: \"Login\",\n  components: {\n    QrcodeVue,\n  },\n  data() {\n    return {\n      active: 0,\n      username: \"\",\n      password: \"\",\n      host: location.hostname,\n      challenge: \"dddd\",\n      domain: location.host,\n      QRCodeValue: this.$route.query,\n      credentials: {},\n      userData: {},\n      proof: \"\",\n    };\n  },\n  created(){\n    const url = `http://${this.host}:5000/api/auth/challenge`;\n    fetch(url)\n    .then(res => res.json())\n    .then(json => {\n      if(json.status == 200){\n        this.challenge = json.message\n      }\n    })\n    .catch(e => alert(`Error: ${e.message}`))\n  },\n  mounted(){\n\n  },\n  methods: {\n    gotosubpage: (id) => {\n      this.$router.push(`${id}`);\n    },\n    async generateProof() {\n      this.credentials = JSON.parse(localStorage.getItem(\"credentials\"));\n      this.userData = JSON.parse(localStorage.getItem(\"userData\"));\n      if((this.credentials && this.credentials['controller']) != null && (this.userData != null &&  this.userData['@context']) ){\n        const p = await sign({\n          doc: this.userData,\n          privateKeyBase58: this.credentials.keys.privateKeyBase58,\n          publicKey: this.credentials.keys.publicKey,\n          challenge: this.challenge.challenge,\n          domain: this.domain,\n        });\n        this.proof = JSON.stringify(p);\n      } else {\n        throw new Error(\"Both files are needed for generating proof\");\n      }\n    },\n    forceFileDownload(data, fileName) {\n      const url = window.URL.createObjectURL(new Blob([data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", fileName);\n      document.body.appendChild(link);\n      link.click();\n    },\n    async downloadProof() {\n      await this.generateProof();\n      this.forceFileDownload(this.proof, \"proof.json\");\n    },\n    onFileChange(event) {\n      try {\n        const file = event.target.files[0];\n        const reader = new FileReader();\n        reader.onload = readSuccess;\n        function readSuccess(evt) {\n          const fileJSON = JSON.parse(evt.target.result);\n          if (!fileJSON) throw new Error(\"Incorrect file\");\n          if (fileJSON[\"controller\"]) {\n            localStorage.setItem(\"credentials\", JSON.stringify(fileJSON));\n          } else if (fileJSON[\"@context\"]) {\n            localStorage.setItem(\"userData\", JSON.stringify(fileJSON));\n          } else {\n            throw new Error(\"Incorrect file\");\n          }\n        }\n        reader.readAsText(file);\n      } catch (e) {\n        alert(`Error: ${e.message}`);\n      }\n    },\n    async login(type) {\n     try{\n      let url = \"\";\n      let headers = {\n        \"Content-Type\": \"application/json\"\n      }\n      if (type === \"PKI\") {\n        url = `http://${this.host}:5000/api/auth/login_pki?type=PKI`;\n        headers['x-auth-token'] = this.challenge.JWTChallenge;\n        await this.generateProof();\n      } else {\n        url = `http://${this.host}:5000/api/auth/login`;\n      }\n      const userData = {\n        username: this.username,\n        password: this.password != \"\" ? sha256hashStr(this.password): this.password,\n        proof: this.proof,\n        controller: this.credentials ? this.credentials.controller: {},\n        publicKey: this.credentials && this.credentials.keys ? this.credentials.keys.publicKey: {},\n        challenge: this.challenge? this.challenge.challenge: \"\",\n        domain: this.domain,\n      };\n      \n      fetch(url, {\n        body: JSON.stringify(userData),\n        method: \"POST\",\n        headers: headers,\n      })\n        .then((res) => res.json())\n        .then((j) => {\n          if (j && j.status == 500) {\n            return alert(`Error:  ${j.error}`);\n          }\n          \n          console.log(this.$route.query)\n          console.log(j.message)\n          const encryptedUserData = encryptData(this.$route.query.appId, JSON.stringify(j.message.user))\n          const redirect_uri = this.$route.query.redirect_uri + '?userData=' + encryptedUserData\n          window.location.href = redirect_uri; \n\n          // localStorage.setItem(\"authToken\", j.message.jwtToken);\n          // localStorage.setItem(\"user\", JSON.stringify(j.message.user));\n          // if (localStorage.getItem(\"authToken\") != null) {\n          //   if (this.$route.params.nextUrl != null) {\n          //     this.$router.push(this.$route.params.nextUrl);\n          //   } else {\n          //     this.$router.push(\"crypto\");\n          //   }\n          // }\n        });\n     }catch(e){\n       alert(`Error: ${e.message}`)\n     }\n      \n    },\n  },\n};\n</script>\n"],"sourceRoot":"src/views"}]}